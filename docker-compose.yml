version: "3.8"

services:
  # üåê FRONTEND - React + Vite
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        VITE_API_URL: ${VITE_API_URL}    # Se inyecta en tiempo de build
    environment:
      VITE_API_URL: ${VITE_API_URL}      # Tambi√©n en tiempo de ejecuci√≥n
    ports:
      - "80:80"
    networks:
      - app-network
    restart: unless-stopped
    depends_on:
      - backend

  # ‚òï BACKEND - Spring Boot
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/mydb
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      # ALLOWED_ORIGINS: "http://localhost"  # Solo si lo usas desde @Value en WebConfig.java
    ports:
      - "8080:8080"
    networks:
      - app-network
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy

  # üêò PostgreSQL
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"  # Solo para desarrollo local
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
